{"ast":null,"code":"var _jsxFileName = \"/home/kieumy/Desktop/Data/ReactJS/Lession/01-starting-project/01-starting-project/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames/bind\";\nimport styles from \"./MealsSummary.module.scss\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles); // const DUMMY_MEALS = [\n//   {\n//     id: \"m1\",\n//     name: \"Sushi\",\n//     description: \"Finest fish and veggies\",\n//     price: 22.99,\n//   },\n//   {\n//     id: \"m2\",\n//     name: \"Schnitzel\",\n//     description: \"A german specialty!\",\n//     price: 16.5,\n//   },\n//   {\n//     id: \"m3\",\n//     name: \"Barbecue Burger\",\n//     description: \"American, raw, meaty\",\n//     price: 12.99,\n//   },\n//   {\n//     id: \"m4\",\n//     name: \"Green Bowl\",\n//     description: \"Healthy...and green...\",\n//     price: 18.99,\n//   },\n// ];\n\nfunction AvailableMeals() {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://food-app-b23c8-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals();\n    } catch {\n      setIsLoading(false);\n      setHttpError;\n    }\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: cx(\"meals-loading\"),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: cx(\"meals\"),\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AvailableMeals, \"GNhuq97CrYTRGtb4EdV+fANyLyQ=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classNames","styles","Card","MealItem","useEffect","useState","cx","bind","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","mealsList","map","meal"],"sources":["/home/kieumy/Desktop/Data/ReactJS/Lession/01-starting-project/01-starting-project/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import classNames from \"classnames/bind\";\nimport styles from \"./MealsSummary.module.scss\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem\";\nimport { useEffect, useState } from \"react\";\n\nconst cx = classNames.bind(styles);\n\n// const DUMMY_MEALS = [\n//   {\n//     id: \"m1\",\n//     name: \"Sushi\",\n//     description: \"Finest fish and veggies\",\n//     price: 22.99,\n//   },\n//   {\n//     id: \"m2\",\n//     name: \"Schnitzel\",\n//     description: \"A german specialty!\",\n//     price: 16.5,\n//   },\n//   {\n//     id: \"m3\",\n//     name: \"Barbecue Burger\",\n//     description: \"American, raw, meaty\",\n//     price: 12.99,\n//   },\n//   {\n//     id: \"m4\",\n//     name: \"Green Bowl\",\n//     description: \"Healthy...and green...\",\n//     price: 18.99,\n//   },\n// ];\n\nfunction AvailableMeals() {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\n        \"https://food-app-b23c8-default-rtdb.firebaseio.com/meals.json\"\n      );\n\n        if(!response.ok) {\n          throw new Error('Something went wrong')\n        }\n\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals();\n\n    } catch {\n      setIsLoading(false);\n      setHttpError\n    }\n\n  }, []);\n\n  if(isLoading) {\n    return (\n      <section className={cx(\"meals-loading\")}><p>Loading</p></section>\n    )\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n  return (\n    <section className={cx(\"meals\")}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n}\n\nexport default AvailableMeals;\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,EAAE,GAAGN,UAAU,CAACO,IAAX,CAAgBN,MAAhB,CAAX,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASO,cAAT,GAA0B;EAAA;;EACxB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,YAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAD0B,CAA5B;;MAIE,IAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;QACf,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MAEH,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;MAEA,MAAMC,WAAW,GAAG,EAApB;;MAEA,KAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;QAC9BE,WAAW,CAACE,IAAZ,CAAiB;UACfC,EAAE,EAAEF,GADW;UAEfG,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;UAGfC,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;UAIfC,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;QAJV,CAAjB;MAMD;;MACDlB,QAAQ,CAACY,WAAD,CAAR;MACAV,YAAY,CAAC,KAAD,CAAZ;IACD,CAvBD;;IAyBA,IAAI;MACFG,UAAU;IAEX,CAHD,CAGE,MAAM;MACNH,YAAY,CAAC,KAAD,CAAZ;MACAE,YAAY;IACb;EAEF,CAlCQ,EAkCN,EAlCM,CAAT;;EAoCA,IAAGH,SAAH,EAAc;IACZ,oBACE;MAAS,SAAS,EAAEL,EAAE,CAAC,eAAD,CAAtB;MAAA,uBAAyC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAzC;MAAA;MAAA;MAAA;IAAA,QADF;EAGD;;EAED,MAAMuB,SAAS,GAAGpB,KAAK,CAACqB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;IACE,EAAE,EAAEA,IAAI,CAACN,EADX;IAGE,IAAI,EAAEM,IAAI,CAACL,IAHb;IAIE,WAAW,EAAEK,IAAI,CAACJ,WAJpB;IAKE,KAAK,EAAEI,IAAI,CAACH;EALd,GAEOG,IAAI,CAACN,EAFZ;IAAA;IAAA;IAAA;EAAA,QADgB,CAAlB;EASA,oBACE;IAAS,SAAS,EAAEnB,EAAE,CAAC,OAAD,CAAtB;IAAA,uBACE,QAAC,IAAD;MAAA,uBACE;QAAA,UAAKuB;MAAL;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA/DQrB,c;;KAAAA,c;AAiET,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}