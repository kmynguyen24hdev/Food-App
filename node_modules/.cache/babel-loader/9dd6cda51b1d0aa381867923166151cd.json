{"ast":null,"code":"var _jsxFileName = \"/home/kieumy/Desktop/Data/ReactJS/Lession/01-starting-project/01-starting-project/src/components/Cart/Checkout/index.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = !isEmpty(enteredPostalCode);\n    const enteredCityIsValid = isFiveChars(enteredCity) && !isEmpty(enteredCity);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalCodeIsValid,\n      city: enteredCityIsValid\n    }); // const formIsValid =\n    //   enteredNameIsValid &&\n    //   enteredStreetIsValid &&\n    //   enteredPostalCodeIsValid &&\n    //   enteredCityIsValid;\n    // Submit data\n\n    props.onConfirm({\n      name: true,\n      street: true,\n      postalCode: true,\n      city: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter this field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter this field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.postalCode ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter this field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter this field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"YB5X1hs74cz47mQ8z6b8cG7V4A0=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","postalCode","city","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","onConfirm","form","control","invalid","actions","onCancel","submit"],"sources":["/home/kieumy/Desktop/Data/ReactJS/Lession/01-starting-project/01-starting-project/src/components/Cart/Checkout/index.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.scss\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postalCode: true,\n    city: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = !isEmpty(enteredPostalCode);\n    const enteredCityIsValid =\n      isFiveChars(enteredCity) && !isEmpty(enteredCity);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postalCode: enteredPostalCodeIsValid,\n      city: enteredCityIsValid,\n    });\n\n    // const formIsValid =\n    //   enteredNameIsValid &&\n    //   enteredStreetIsValid &&\n    //   enteredPostalCodeIsValid &&\n    //   enteredCityIsValid;\n\n    // Submit data\n    props.onConfirm({\n        name: true,\n    street: true,\n    postalCode: true,\n    city: true,\n    })\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.name ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter this field</p>}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.street ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please enter this field</p>}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.postalCode ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\n        {!formInputsValidity.postalCode && <p>Please enter this field</p>}\n      </div>\n      <div\n        className={`${classes.control} ${\n          formInputsValidity.city ? \"\" : classes.invalid\n        }`}\n      >\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please enter this field</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}